(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{292:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(17);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nvar NewsContainer = function NewsContainer(newsContainer, newsList) {\n  var _this = this;\n\n  _classCallCheck(this, NewsContainer);\n\n  _defineProperty(this, \"showNews\", function (articles) {\n    var template = document.getElementById('article-template');\n    var templateContent = template.content;\n    var title = templateContent.querySelector('h2');\n    var image = templateContent.querySelector('img');\n    var description = templateContent.querySelector('.description');\n    var author = templateContent.querySelector('.author');\n    var date = templateContent.querySelector('.date');\n    var link = templateContent.querySelector('.news-link');\n    var authorContainer = templateContent.querySelector('.author-container');\n    var dateContainer = templateContent.querySelector('.date-container');\n    [image, authorContainer, dateContainer].forEach(function (node) {\n      var classList = node.classList;\n      classList.contains('hidden') && classList.toggle('hidden');\n    });\n    _this.data.innerHTML = '';\n    articles.forEach(function (article) {\n      var urlToImage = article.urlToImage;\n      var articleAuthor = article.author;\n      var articleDate = article.publishedAt;\n      urlToImage === null ? image.classList.toggle('hidden') : image.src = urlToImage;\n      articleAuthor === null ? authorContainer.classList.toggle('hidden') : author.textContent = articleAuthor;\n      articleDate === null ? dateContainer.classList.toggle('hidden') : date.textContent = new Date(articleDate).toLocaleDateString('en-US', _constants__WEBPACK_IMPORTED_MODULE_0__[/* dateOptions */ \"e\"]);\n      title.textContent = article.title;\n      description.textContent = article.description;\n      link.href = article.url;\n      var articleClone = document.importNode(templateContent, true);\n\n      _this.data.appendChild(articleClone);\n    });\n    _this.newsList.scrollTop = 0;\n  });\n\n  _defineProperty(this, \"switchLoadingIndication\", function () {\n    _this.data.classList.toggle('loading');\n  });\n\n  this.data = newsContainer;\n  this.newsList = newsList;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (NewsContainer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9OZXdzQ29udGFpbmVyLmpzP2UwODUiXSwibmFtZXMiOlsiTmV3c0NvbnRhaW5lciIsIm5ld3NDb250YWluZXIiLCJuZXdzTGlzdCIsImFydGljbGVzIiwidGVtcGxhdGUiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwidGVtcGxhdGVDb250ZW50IiwiY29udGVudCIsInRpdGxlIiwicXVlcnlTZWxlY3RvciIsImltYWdlIiwiZGVzY3JpcHRpb24iLCJhdXRob3IiLCJkYXRlIiwibGluayIsImF1dGhvckNvbnRhaW5lciIsImRhdGVDb250YWluZXIiLCJmb3JFYWNoIiwibm9kZSIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwidG9nZ2xlIiwiZGF0YSIsImlubmVySFRNTCIsImFydGljbGUiLCJ1cmxUb0ltYWdlIiwiYXJ0aWNsZUF1dGhvciIsImFydGljbGVEYXRlIiwicHVibGlzaGVkQXQiLCJzcmMiLCJ0ZXh0Q29udGVudCIsIkRhdGUiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJkYXRlT3B0aW9ucyIsImhyZWYiLCJ1cmwiLCJhcnRpY2xlQ2xvbmUiLCJpbXBvcnROb2RlIiwiYXBwZW5kQ2hpbGQiLCJzY3JvbGxUb3AiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztJQUVNQSxhLEdBQ0YsdUJBQVlDLGFBQVosRUFBMkJDLFFBQTNCLEVBQXFDO0FBQUE7O0FBQUE7O0FBQUEsb0NBSzFCLFVBQUNDLFFBQUQsRUFBYztBQUNyQixRQUFNQyxRQUFRLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixrQkFBeEIsQ0FBakI7QUFDQSxRQUFNQyxlQUFlLEdBQUdILFFBQVEsQ0FBQ0ksT0FBakM7QUFDQSxRQUFNQyxLQUFLLEdBQUdGLGVBQWUsQ0FBQ0csYUFBaEIsQ0FBOEIsSUFBOUIsQ0FBZDtBQUNBLFFBQU1DLEtBQUssR0FBR0osZUFBZSxDQUFDRyxhQUFoQixDQUE4QixLQUE5QixDQUFkO0FBQ0EsUUFBTUUsV0FBVyxHQUFHTCxlQUFlLENBQUNHLGFBQWhCLENBQThCLGNBQTlCLENBQXBCO0FBQ0EsUUFBTUcsTUFBTSxHQUFHTixlQUFlLENBQUNHLGFBQWhCLENBQThCLFNBQTlCLENBQWY7QUFDQSxRQUFNSSxJQUFJLEdBQUdQLGVBQWUsQ0FBQ0csYUFBaEIsQ0FBOEIsT0FBOUIsQ0FBYjtBQUNBLFFBQU1LLElBQUksR0FBR1IsZUFBZSxDQUFDRyxhQUFoQixDQUE4QixZQUE5QixDQUFiO0FBQ0EsUUFBTU0sZUFBZSxHQUFHVCxlQUFlLENBQUNHLGFBQWhCLENBQThCLG1CQUE5QixDQUF4QjtBQUNBLFFBQU1PLGFBQWEsR0FBR1YsZUFBZSxDQUFDRyxhQUFoQixDQUE4QixpQkFBOUIsQ0FBdEI7QUFFQSxLQUFDQyxLQUFELEVBQVFLLGVBQVIsRUFBeUJDLGFBQXpCLEVBQXdDQyxPQUF4QyxDQUFnRCxVQUFDQyxJQUFELEVBQVU7QUFDdEQsVUFBTUMsU0FBUyxHQUFHRCxJQUFJLENBQUNDLFNBQXZCO0FBQ0FBLGVBQVMsQ0FBQ0MsUUFBVixDQUFtQixRQUFuQixLQUFnQ0QsU0FBUyxDQUFDRSxNQUFWLENBQWlCLFFBQWpCLENBQWhDO0FBQ0gsS0FIRDtBQUtBLFNBQUksQ0FBQ0MsSUFBTCxDQUFVQyxTQUFWLEdBQXNCLEVBQXRCO0FBQ0FyQixZQUFRLENBQUNlLE9BQVQsQ0FBaUIsVUFBQ08sT0FBRCxFQUFhO0FBQzFCLFVBQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDQyxVQUEzQjtBQUNBLFVBQU1DLGFBQWEsR0FBR0YsT0FBTyxDQUFDWixNQUE5QjtBQUNBLFVBQU1lLFdBQVcsR0FBR0gsT0FBTyxDQUFDSSxXQUE1QjtBQUVBSCxnQkFBVSxLQUFLLElBQWYsR0FBc0JmLEtBQUssQ0FBQ1MsU0FBTixDQUFnQkUsTUFBaEIsQ0FBdUIsUUFBdkIsQ0FBdEIsR0FBeURYLEtBQUssQ0FBQ21CLEdBQU4sR0FBWUosVUFBckU7QUFDQUMsbUJBQWEsS0FBSyxJQUFsQixHQUF5QlgsZUFBZSxDQUFDSSxTQUFoQixDQUEwQkUsTUFBMUIsQ0FBaUMsUUFBakMsQ0FBekIsR0FBc0VULE1BQU0sQ0FBQ2tCLFdBQVAsR0FBcUJKLGFBQTNGO0FBQ0FDLGlCQUFXLEtBQUssSUFBaEIsR0FBdUJYLGFBQWEsQ0FBQ0csU0FBZCxDQUF3QkUsTUFBeEIsQ0FBK0IsUUFBL0IsQ0FBdkIsR0FBa0VSLElBQUksQ0FBQ2lCLFdBQUwsR0FBbUIsSUFBSUMsSUFBSixDQUFTSixXQUFULEVBQXNCSyxrQkFBdEIsQ0FBeUMsT0FBekMsRUFBa0RDLDhEQUFsRCxDQUFyRjtBQUNBekIsV0FBSyxDQUFDc0IsV0FBTixHQUFvQk4sT0FBTyxDQUFDaEIsS0FBNUI7QUFDQUcsaUJBQVcsQ0FBQ21CLFdBQVosR0FBMEJOLE9BQU8sQ0FBQ2IsV0FBbEM7QUFDQUcsVUFBSSxDQUFDb0IsSUFBTCxHQUFZVixPQUFPLENBQUNXLEdBQXBCO0FBRUEsVUFBTUMsWUFBWSxHQUFHaEMsUUFBUSxDQUFDaUMsVUFBVCxDQUFvQi9CLGVBQXBCLEVBQXFDLElBQXJDLENBQXJCOztBQUNBLFdBQUksQ0FBQ2dCLElBQUwsQ0FBVWdCLFdBQVYsQ0FBc0JGLFlBQXRCO0FBQ0gsS0FkRDtBQWdCQSxTQUFJLENBQUNuQyxRQUFMLENBQWNzQyxTQUFkLEdBQTBCLENBQTFCO0FBQ0gsR0F4Q29DOztBQUFBLG1EQTBDWCxZQUFNO0FBQzVCLFNBQUksQ0FBQ2pCLElBQUwsQ0FBVUgsU0FBVixDQUFvQkUsTUFBcEIsQ0FBMkIsU0FBM0I7QUFDSCxHQTVDb0M7O0FBQ2pDLE9BQUtDLElBQUwsR0FBWXRCLGFBQVo7QUFDQSxPQUFLQyxRQUFMLEdBQWdCQSxRQUFoQjtBQUNILEM7O0FBNENVRiw0RUFBZiIsImZpbGUiOiIyOTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkYXRlT3B0aW9ucyB9ICBmcm9tICcuLi9jb25zdGFudHMnO1xyXG5cclxuY2xhc3MgTmV3c0NvbnRhaW5lciB7XHJcbiAgICBjb25zdHJ1Y3RvcihuZXdzQ29udGFpbmVyLCBuZXdzTGlzdCkge1xyXG4gICAgICAgIHRoaXMuZGF0YSA9IG5ld3NDb250YWluZXI7XHJcbiAgICAgICAgdGhpcy5uZXdzTGlzdCA9IG5ld3NMaXN0O1xyXG4gICAgfSBcclxuICAgICAgICBcclxuICAgIHNob3dOZXdzID0gKGFydGljbGVzKSA9PiB7ICAgICAgICBcclxuICAgICAgICBjb25zdCB0ZW1wbGF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcnRpY2xlLXRlbXBsYXRlJyk7XHJcbiAgICAgICAgY29uc3QgdGVtcGxhdGVDb250ZW50ID0gdGVtcGxhdGUuY29udGVudDtcclxuICAgICAgICBjb25zdCB0aXRsZSA9IHRlbXBsYXRlQ29udGVudC5xdWVyeVNlbGVjdG9yKCdoMicpO1xyXG4gICAgICAgIGNvbnN0IGltYWdlID0gdGVtcGxhdGVDb250ZW50LnF1ZXJ5U2VsZWN0b3IoJ2ltZycpO1xyXG4gICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gdGVtcGxhdGVDb250ZW50LnF1ZXJ5U2VsZWN0b3IoJy5kZXNjcmlwdGlvbicpO1xyXG4gICAgICAgIGNvbnN0IGF1dGhvciA9IHRlbXBsYXRlQ29udGVudC5xdWVyeVNlbGVjdG9yKCcuYXV0aG9yJyk7XHJcbiAgICAgICAgY29uc3QgZGF0ZSA9IHRlbXBsYXRlQ29udGVudC5xdWVyeVNlbGVjdG9yKCcuZGF0ZScpO1xyXG4gICAgICAgIGNvbnN0IGxpbmsgPSB0ZW1wbGF0ZUNvbnRlbnQucXVlcnlTZWxlY3RvcignLm5ld3MtbGluaycpO1xyXG4gICAgICAgIGNvbnN0IGF1dGhvckNvbnRhaW5lciA9IHRlbXBsYXRlQ29udGVudC5xdWVyeVNlbGVjdG9yKCcuYXV0aG9yLWNvbnRhaW5lcicpO1xyXG4gICAgICAgIGNvbnN0IGRhdGVDb250YWluZXIgPSB0ZW1wbGF0ZUNvbnRlbnQucXVlcnlTZWxlY3RvcignLmRhdGUtY29udGFpbmVyJyk7XHJcbiAgICBcclxuICAgICAgICBbaW1hZ2UsIGF1dGhvckNvbnRhaW5lciwgZGF0ZUNvbnRhaW5lcl0uZm9yRWFjaCgobm9kZSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBjbGFzc0xpc3QgPSBub2RlLmNsYXNzTGlzdDtcclxuICAgICAgICAgICAgY2xhc3NMaXN0LmNvbnRhaW5zKCdoaWRkZW4nKSAmJiBjbGFzc0xpc3QudG9nZ2xlKCdoaWRkZW4nKTtcclxuICAgICAgICB9KTtcclxuICAgIFxyXG4gICAgICAgIHRoaXMuZGF0YS5pbm5lckhUTUwgPSAnJztcclxuICAgICAgICBhcnRpY2xlcy5mb3JFYWNoKChhcnRpY2xlKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHVybFRvSW1hZ2UgPSBhcnRpY2xlLnVybFRvSW1hZ2U7XHJcbiAgICAgICAgICAgIGNvbnN0IGFydGljbGVBdXRob3IgPSBhcnRpY2xlLmF1dGhvcjtcclxuICAgICAgICAgICAgY29uc3QgYXJ0aWNsZURhdGUgPSBhcnRpY2xlLnB1Ymxpc2hlZEF0OyAgICAgIFxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdXJsVG9JbWFnZSA9PT0gbnVsbCA/IGltYWdlLmNsYXNzTGlzdC50b2dnbGUoJ2hpZGRlbicpIDogaW1hZ2Uuc3JjID0gdXJsVG9JbWFnZTtcclxuICAgICAgICAgICAgYXJ0aWNsZUF1dGhvciA9PT0gbnVsbCA/IGF1dGhvckNvbnRhaW5lci5jbGFzc0xpc3QudG9nZ2xlKCdoaWRkZW4nKSA6IGF1dGhvci50ZXh0Q29udGVudCA9IGFydGljbGVBdXRob3I7XHJcbiAgICAgICAgICAgIGFydGljbGVEYXRlID09PSBudWxsID8gZGF0ZUNvbnRhaW5lci5jbGFzc0xpc3QudG9nZ2xlKCdoaWRkZW4nKSA6IGRhdGUudGV4dENvbnRlbnQgPSBuZXcgRGF0ZShhcnRpY2xlRGF0ZSkudG9Mb2NhbGVEYXRlU3RyaW5nKCdlbi1VUycsIGRhdGVPcHRpb25zKTtcclxuICAgICAgICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSBhcnRpY2xlLnRpdGxlO1xyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IGFydGljbGUuZGVzY3JpcHRpb247ICBcclxuICAgICAgICAgICAgbGluay5ocmVmID0gYXJ0aWNsZS51cmw7XHJcbiAgICBcclxuICAgICAgICAgICAgY29uc3QgYXJ0aWNsZUNsb25lID0gZG9jdW1lbnQuaW1wb3J0Tm9kZSh0ZW1wbGF0ZUNvbnRlbnQsIHRydWUpO1xyXG4gICAgICAgICAgICB0aGlzLmRhdGEuYXBwZW5kQ2hpbGQoYXJ0aWNsZUNsb25lKTsgXHJcbiAgICAgICAgfSk7ICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLm5ld3NMaXN0LnNjcm9sbFRvcCA9IDA7IFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBzd2l0Y2hMb2FkaW5nSW5kaWNhdGlvbiA9ICgpID0+IHtcclxuICAgICAgICB0aGlzLmRhdGEuY2xhc3NMaXN0LnRvZ2dsZSgnbG9hZGluZycpO1xyXG4gICAgfSBcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTmV3c0NvbnRhaW5lcjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///292\n")}}]);